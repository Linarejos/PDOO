/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIQytetet;
import java.util.*;
import javax.swing.JOptionPane;
import modeloqytetet.*;

/**
 *
 * @author usuario
 */
public class ControladorQytetet extends javax.swing.JFrame {
    Qytetet modeloQytetet;
    /**
     * Creates new form ControladorQytetet
     */
    public ControladorQytetet() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Jugar = new javax.swing.JButton();
        PasarTurno = new javax.swing.JButton();
        Comprar = new javax.swing.JButton();
        AplicarSorpresa = new javax.swing.JButton();
        SalirCarcelTirandoDado = new javax.swing.JButton();
        SalirCarcelPagando = new javax.swing.JButton();
        vistaQytetet1 = new GUIQytetet.VistaQytetet();
        GestionInmobiliaria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Jugar.setText("Jugar");
        Jugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JugarActionPerformed(evt);
            }
        });

        PasarTurno.setText("Pasar Turno");
        PasarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasarTurnoActionPerformed(evt);
            }
        });

        Comprar.setText("Comprar");
        Comprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprarActionPerformed(evt);
            }
        });

        AplicarSorpresa.setText("Aplicar Sorpresa");
        AplicarSorpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AplicarSorpresaActionPerformed(evt);
            }
        });

        SalirCarcelTirandoDado.setText("Salir Carcel Tirando Dado");
        SalirCarcelTirandoDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCarcelTirandoDadoActionPerformed(evt);
            }
        });

        SalirCarcelPagando.setText("Salir Carcel Pagando");
        SalirCarcelPagando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCarcelPagandoActionPerformed(evt);
            }
        });

        GestionInmobiliaria.setText("Gestion Inmobiliaria");
        GestionInmobiliaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GestionInmobiliariaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(vistaQytetet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(Jugar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PasarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(Comprar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SalirCarcelTirandoDado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AplicarSorpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(GestionInmobiliaria, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SalirCarcelPagando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(64, 64, 64))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vistaQytetet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Comprar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasarTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AplicarSorpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GestionInmobiliaria, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SalirCarcelTirandoDado)
                            .addComponent(SalirCarcelPagando)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Jugar, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JugarActionPerformed
        // TODO add your handling code here:
        boolean resultado = modeloQytetet.jugar();
        boolean gestion = false;
        this.vistaQytetet1.actualizar(modeloQytetet); 
        
        if(modeloQytetet.getJugadorActual().getSaldo() > 0){
            if(!modeloQytetet.getJugadorActual().getEncarcelado()){
                if(modeloQytetet.getJugadorActual().getCasillaActual().GetTipo() == TipoCasilla.CALLE){
                    if(resultado){//tiene Propietario
                        //El jugador le paga al otro
                        String propietario = ((Calle)modeloQytetet.getJugadorActual().getCasillaActual()).getTitulo().getPropietario().getNombre();
                        
                        if(modeloQytetet.getJugadorActual().getNombre() != propietario){
                            JOptionPane.showMessageDialog(this, "Has caido en la casilla de " + propietario);
                        }
                        
                        this.PasarTurno.setEnabled(true);
                        this.GestionInmobiliaria.setEnabled(true);
                        gestion = true;
                    }
                    else    //no tiene propietario
                        this.Comprar.setEnabled(true);
                }
                else if(modeloQytetet.getJugadorActual().getCasillaActual().GetTipo() == TipoCasilla.SORPRESA){
                    JOptionPane.showMessageDialog(this, "Has caido en una casilla de tipo Sorpresa");
                    this.AplicarSorpresa.setEnabled(true);
                }
                else if(modeloQytetet.getJugadorActual().getCasillaActual().GetTipo() == TipoCasilla.IMPUESTO){
                    JOptionPane.showMessageDialog(this, "Has caido en una casilla de tipo Impuesto");
                    this.PasarTurno.setEnabled(true);
                    this.GestionInmobiliaria.setEnabled(true);
                    gestion = true;
                }
                else{
                    this.PasarTurno.setEnabled(true);
                    this.AplicarSorpresa.setEnabled(false);
                    this.GestionInmobiliaria.setEnabled(true);
                    gestion = true;
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "El Juez te ha mandado a la cárcel");
                this.PasarTurno.setEnabled(true);
            }
        }
        else
            finDeJuego();
            
        comprobarCambios(modeloQytetet.getJugadorActual().getSaldo(), modeloQytetet.getJugadorActual().getEncarcelado());
        
        this.Jugar.setEnabled(false);
        
        if(gestion){
            if (modeloQytetet.getJugadorActual().tengoPropiedades() && !modeloQytetet.getJugadorActual().getEncarcelado())
                this.GestionInmobiliaria.setEnabled(true);
            else
                this.GestionInmobiliaria.setEnabled(false);
        }
        
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_JugarActionPerformed

    private void ComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprarActionPerformed
        // TODO add your handling code here:
        boolean resultado = modeloQytetet.comprarTituloPropiedad(); 
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelTirandoDado.setEnabled(false);
        this.Comprar.setEnabled(false);
        this.Jugar.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        
        if(resultado){
            JOptionPane.showMessageDialog(this, "Has comprado una propiedad");
            this.vistaQytetet1.actualizar(modeloQytetet);
        }
        else
            JOptionPane.showMessageDialog(this, "No has comprado la propiedad");
       
        this.PasarTurno.setEnabled(true);
        this.Comprar.setEnabled(false);
        
        if (modeloQytetet.getJugadorActual().tengoPropiedades() && !modeloQytetet.getJugadorActual().getEncarcelado())
            this.GestionInmobiliaria.setEnabled(true);
        else
            this.GestionInmobiliaria.setEnabled(false);        
    }//GEN-LAST:event_ComprarActionPerformed

    private void PasarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasarTurnoActionPerformed
        // TODO add your handling code here:
        modeloQytetet.siguienteJugador();
        habilitarComenzarTurno();               
        this.vistaQytetet1.actualizar(modeloQytetet);
        
        if(modeloQytetet.getJugadorActual().getSaldo() < 0)
            finDeJuego();
    }//GEN-LAST:event_PasarTurnoActionPerformed

    private void AplicarSorpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AplicarSorpresaActionPerformed
        // TODO add your handling code here:
        boolean resultado = modeloQytetet.aplicarSorpresa();
        boolean gestion = false;
 
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelTirandoDado.setEnabled(false);
        this.Jugar.setEnabled(false);
        this.Comprar.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        
        comprobarCambios(modeloQytetet.getJugadorActual().getSaldo(), modeloQytetet.getJugadorActual().getEncarcelado());
        
        if(resultado)
            JOptionPane.showMessageDialog(this, "Has aplicado la sorpresa");
        else
            JOptionPane.showMessageDialog(this, "No se ha aplicado la sorpresa");
        
        this.AplicarSorpresa.setEnabled(false);
        this.PasarTurno.setEnabled(true);
        
        if(gestion){
            if (modeloQytetet.getJugadorActual().tengoPropiedades() && !modeloQytetet.getJugadorActual().getEncarcelado())
                this.GestionInmobiliaria.setEnabled(true);
            else
                this.GestionInmobiliaria.setEnabled(false);
        }
        
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_AplicarSorpresaActionPerformed

    private void SalirCarcelTirandoDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirCarcelTirandoDadoActionPerformed
        // TODO add your handling code here:
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.TIRANDODADO);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelTirandoDado.setEnabled(false);
        if(resultado){
            JOptionPane.showMessageDialog(this, "Sales de la cárcel");
            this.Jugar.setEnabled(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "NO sales de la carcel");
            this.PasarTurno.setEnabled(true);
        }
        this.vistaQytetet1.actualizar(modeloQytetet);         
    }//GEN-LAST:event_SalirCarcelTirandoDadoActionPerformed

    private void SalirCarcelPagandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirCarcelPagandoActionPerformed
        // TODO add your handling code here:
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.PAGANDOLIBERTAD);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelTirandoDado.setEnabled(false);
        if(resultado){
            JOptionPane.showMessageDialog(this, "Sales de la cárcel");
            this.Jugar.setEnabled(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "NO sales de la carcel");
            this.PasarTurno.setEnabled(true);
        }
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_SalirCarcelPagandoActionPerformed

    private void GestionInmobiliariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GestionInmobiliariaActionPerformed
        // TODO add your handling code here:
        Object[] opciones = {"Edificar Casa", "Edificar Hotel", "Vender Propiedad", "Hipotecar Propiedad", "Cancelar Hipoteca"};
        
        int eleccion = JOptionPane.showOptionDialog(null, "Selecciona la acción que deseas hacer:", "Menú Gestión Inmobiliaria", JOptionPane.DEFAULT_OPTION, 
                JOptionPane.INFORMATION_MESSAGE, null, opciones, opciones[0]);
        
        accionesGestionInmobiliaria(eleccion);
        
        if (modeloQytetet.getJugadorActual().tengoPropiedades() && !modeloQytetet.getJugadorActual().getEncarcelado())
            this.GestionInmobiliaria.setEnabled(true);
        else
            this.GestionInmobiliaria.setEnabled(false);
    }//GEN-LAST:event_GestionInmobiliariaActionPerformed

    public void habilitarComenzarTurno(){
        this.Comprar.setEnabled(false);
        this.PasarTurno.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelTirandoDado.setEnabled(false);
        this.GestionInmobiliaria.setEnabled(false);
        if(modeloQytetet.getJugadorActual().getEncarcelado()){
            this.SalirCarcelPagando.setEnabled(true);
            this.SalirCarcelTirandoDado.setEnabled(true);
        }
        else
            this.Jugar.setEnabled(true);
    }
    
    public void finDeJuego(){
        deshabilitarBotones();
        JOptionPane.showMessageDialog(this, modeloQytetet.obtenerRanking().toString());
    }
    
    private void accionesGestionInmobiliaria(int eleccion) {
        boolean accionCompletada = false;
        
        Casilla casilla = elegirPropiedad();
        
        if (eleccion == 0) {
            accionCompletada = modeloQytetet.edificarCasa(casilla);            
            if (!accionCompletada)
                JOptionPane.showMessageDialog(this, "No se ha podido edificar la casa porque o no se dispone de suficiente dinero o porque se ha alcanzado el numero maximo de casas.");
        } 
        else if (eleccion == 1) {
            accionCompletada = modeloQytetet.edificarHotel(casilla);            
            if (!accionCompletada) 
                JOptionPane.showMessageDialog(this, "No se ha podido edificar el hotel porque no se dispone de suficiente dinero, se ha alcanzado el numero maximo de hoteles o porque no se disponen de suficientes casas.");            
        } 
        else if (eleccion == 2) {
            accionCompletada = modeloQytetet.venderPropiedad(casilla);            
            if (!accionCompletada)
                JOptionPane.showMessageDialog(this, "No se ha podido vender la propiedad.");
        } 
        else if (eleccion == 3) {
            accionCompletada = modeloQytetet.hipotecarPropiedad(casilla);            
            if (!accionCompletada)
                JOptionPane.showMessageDialog(this, "No se ha podido hipotecar la propiedad.");            
        } 
        else if (eleccion == 4) {
            accionCompletada = modeloQytetet.cancelarHipoteca(casilla);            
            if (!accionCompletada)
                JOptionPane.showMessageDialog(this, "No se ha podido cancelar la hipoteca.");
        }
}
    
    private Casilla elegirPropiedad() {
        ArrayList<TituloPropiedad> propiedades = modeloQytetet.getJugadorActual().getPropiedades();
        ArrayList<String> nombresPropiedades = new ArrayList();
        
        String[] propiedadesMenu = new String[propiedades.size()];
        
        for (TituloPropiedad propiedad: propiedades) {
            nombresPropiedades.add(propiedad.GetNombre());
        }
        
        propiedadesMenu = nombresPropiedades.toArray(propiedadesMenu);
        
        int eleccion = JOptionPane.showOptionDialog(null, "Selecciona la propiedad que deseas:", "Elección Propiedad", JOptionPane.DEFAULT_OPTION, 
                JOptionPane.INFORMATION_MESSAGE, null, propiedadesMenu, propiedadesMenu[0]);
        
        return propiedades.get(eleccion).GetCasilla();
    }    
    
    private void comprobarCambios(int saldo, boolean encarcelado) {
        if (saldo != modeloQytetet.getJugadorActual().getSaldo()) {
            JOptionPane.showMessageDialog(this, "Tu saldo se ha visto modificado en " + (modeloQytetet.getJugadorActual().getSaldo() - saldo));
        }
        
        if (encarcelado != modeloQytetet.getJugadorActual().getEncarcelado()) {
            JOptionPane.showMessageDialog(this, "Has sido encarcelado");
        }
    }
    
    public void deshabilitarBotones(){
        this.Comprar.setEnabled(false);
        this.PasarTurno.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelTirandoDado.setEnabled(false);      
        this.Jugar.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {      
        ControladorQytetet controladorQytetet = new ControladorQytetet();
        CapturaNombresJugadores capturaNombres = new CapturaNombresJugadores(controladorQytetet, true);
        ArrayList<String> nombres = capturaNombres.obtenerNombres();
        Qytetet modeloQytetet = Qytetet.getInstance();
        modeloQytetet.inicializarJuego(nombres);
        Dado.createInstance(controladorQytetet);
        controladorQytetet.actualizar(modeloQytetet);
        controladorQytetet.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AplicarSorpresa;
    private javax.swing.JButton Comprar;
    private javax.swing.JButton GestionInmobiliaria;
    private javax.swing.JButton Jugar;
    private javax.swing.JButton PasarTurno;
    private javax.swing.JButton SalirCarcelPagando;
    private javax.swing.JButton SalirCarcelTirandoDado;
    private GUIQytetet.VistaQytetet vistaQytetet1;
    // End of variables declaration//GEN-END:variables

    public void actualizar(Qytetet aux){        
        modeloQytetet = aux;
        habilitarComenzarTurno();
        vistaQytetet1.actualizar(modeloQytetet);
        this.repaint();
        this.revalidate();
    }
}
